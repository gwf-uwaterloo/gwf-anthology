@article{Chakroborti-2021-Designing,
    title = "Designing for Recommending Intermediate States in A Scientific Workflow Management System",
    author = "Chakroborti, Debasish  and
      Roy, Banani  and
      Nath, Sristy Sumana  and
      Chakroborti, Debasish  and
      Roy, Banani  and
      Nath, Sristy Sumana",
    journal = "Proceedings of the ACM on Human-Computer Interaction, Volume 5, Issue EICS",
    volume = "5",
    year = "2021",
    publisher = "Association for Computing Machinery (ACM)",
    url = "https://gwf-uwaterloo.github.io/gwf-publications/G21-14001",
    doi = "10.1145/3457145",
    pages = "1--29",
    abstract = "To process a large amount of data sequentially and systematically, proper management of workflow components (i.e., modules, data, configurations, associations among ports and links) in a Scientific Workflow Management System (SWfMS) is inevitable. Managing data with provenance in a SWfMS to support reusability of workflows, modules, and data is not a simple task. Handling such components is even more burdensome for frequently assembled and executed complex workflows for investigating large datasets with different technologies (i.e., various learning algorithms or models). However, a great many studies propose various techniques and technologies for managing and recommending services in a SWfMS, but only a very few studies consider the management of data in a SWfMS for efficient storing and facilitating workflow executions. Furthermore, there is no study to inquire about the effectiveness and efficiency of such data management in a SWfMS from a user perspective. In this paper, we present and evaluate a GUI version of such a novel approach of intermediate data management with two use cases (Plant Phenotyping and Bioinformatics). The technique we call GUI-RISPTS (Recommending Intermediate States from Pipelines Considering Tool-States) can facilitate executions of workflows with processed data (i.e., intermediate outcomes of modules in a workflow) and can thus reduce the computational time of some modules in a SWfMS. We integrated GUI-RISPTS with an existing workflow management system called SciWorCS. In SciWorCS, we present an interface that users use for selecting the recommendation of intermediate states (i.e., modules' outcomes). We investigated GUI-RISPTS's effectiveness from users' perspectives along with measuring its overhead in terms of storage and efficiency in workflow execution.",
}
